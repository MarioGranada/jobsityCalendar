// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CalendarForm [Component] should be rendered 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <CalendarForm
    isUpdatingReminder={false}
    selectedDate="1-9-2020"
    selectedReminder={null}
  >
    <ForwardRef(Modal)
      open={true}
    >
      <ForwardRef(Portal)
        disablePortal={false}
      >
        <Portal
          containerInfo={
            <body
              style="padding-right: 0px; overflow: hidden;"
            >
              <div
                role="presentation"
                style="position: fixed; z-index: 1300; right: 0px; bottom: 0px; top: 0px; left: 0px;"
              >
                <div
                  aria-hidden="true"
                  style="z-index: -1; position: fixed; right: 0px; bottom: 0px; top: 0px; left: 0px; background-color: rgba(0, 0, 0, 0.5);"
                />
                <div
                  data-test="sentinelStart"
                  tabindex="0"
                />
                <div
                  class="calendar-form-container"
                  tabindex="-1"
                >
                  <form
                    autocomplete="off"
                    novalidate=""
                  >
                    <div
                      class="MuiFormControl-root calendar-form-control"
                    >
                      <div
                        class="MuiFormControl-root MuiTextField-root"
                      >
                        <label
                          class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink Mui-disabled Mui-disabled MuiFormLabel-filled"
                          data-shrink="true"
                        >
                          Date
                        </label>
                        <div
                          class="MuiInputBase-root MuiInput-root MuiInput-underline Mui-disabled Mui-disabled MuiInputBase-formControl MuiInput-formControl"
                        >
                          <input
                            aria-invalid="false"
                            class="MuiInputBase-input MuiInput-input Mui-disabled Mui-disabled"
                            disabled=""
                            readonly=""
                            type="text"
                            value="1-9-2020"
                          />
                        </div>
                      </div>
                    </div>
                    <div
                      class="MuiFormControl-root calendar-form-control"
                    >
                      <div
                        class="MuiFormControl-root MuiTextField-root"
                      >
                        <label
                          class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                          data-shrink="false"
                        >
                          Username
                        </label>
                        <div
                          class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                        >
                          <input
                            aria-invalid="false"
                            class="MuiInputBase-input MuiInput-input"
                            type="text"
                            value=""
                          />
                        </div>
                      </div>
                    </div>
                    <div
                      class="MuiFormControl-root calendar-form-control"
                    >
                      <div
                        class="MuiFormControl-root MuiTextField-root"
                      >
                        <label
                          class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                          data-shrink="false"
                        >
                          Reminder title
                        </label>
                        <div
                          class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                        >
                          <input
                            aria-invalid="false"
                            class="MuiInputBase-input MuiInput-input"
                            maxlength="30"
                            type="text"
                            value=""
                          />
                        </div>
                      </div>
                    </div>
                    <div
                      class="MuiFormControl-root calendar-form-control"
                    >
                      <div
                        class="current-city"
                      >
                        <div>
                          City: 
                          
                        </div>
                        <div>
                          City Forecast:
                           
                        </div>
                      </div>
                      <div>
                        <span
                          class="algolia-places"
                          style="display: inline-block;"
                        >
                          <input
                            aria-autocomplete="both"
                            aria-expanded="false"
                            aria-label="Preferred city"
                            aria-owns="algolia-places-listbox-0"
                            autocomplete="off"
                            class="ap-input"
                            dir="auto"
                            language="en"
                            placeholder="Preferred city"
                            role="combobox"
                            spellcheck="false"
                            style="vertical-align: top;"
                            type="city"
                          />
                          <pre
                            aria-hidden="true"
                            style="visibility: hidden; white-space: pre; word-spacing: normal; letter-spacing: normal; text-indent: 0; text-rendering: auto; text-transform: none;"
                          />
                          <span
                            class="ap-dropdown-menu"
                            id="algolia-places-listbox-0"
                            role="listbox"
                            style="top: 100%; left: 0px; z-index: 100; display: none;"
                          >
                            <div
                              class="ap-dataset-places"
                            />
                          </span>
                          <button
                            aria-label="clear"
                            class="ap-input-icon ap-icon-clear"
                            style="display: none;"
                            type="button"
                          >
                            <svg
                              height="12"
                              viewBox="0 0 12 12"
                              width="12"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M.566 1.698L0 1.13 1.132 0l.565.566L6 4.868 10.302.566 10.868 0 12 1.132l-.566.565L7.132 6l4.302 4.3.566.568L10.868 12l-.565-.566L6 7.132l-4.3 4.302L1.13 12 0 10.868l.566-.565L4.868 6 .566 1.698z"
                              />
                            </svg>
                            

                          </button>
                          <button
                            aria-label="focus"
                            class="ap-input-icon ap-icon-pin"
                            type="button"
                          >
                            <svg
                              height="20"
                              viewBox="0 0 14 20"
                              width="20"
                              xmlns="http://www.w3.org/2000/svg"
                            >
                              <path
                                d="M7 0C3.13 0 0 3.13 0 7c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5C5.62 9.5 4.5 8.38 4.5 7S5.62 4.5 7 4.5 9.5 5.62 9.5 7 8.38 9.5 7 9.5z"
                              />
                            </svg>
                            

                          </button>
                        </span>
                      </div>
                    </div>
                    <div
                      class="MuiFormControl-root calendar-form-control"
                    >
                      <div
                        class="MuiFormControl-root MuiTextField-root"
                      >
                        <label
                          class="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiFormLabel-filled"
                          data-shrink="true"
                        >
                          Time
                        </label>
                        <div
                          class="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                        >
                          <input
                            aria-invalid="false"
                            class="MuiInputBase-input MuiInput-input"
                            step="300"
                            type="time"
                            value="07:30"
                          />
                        </div>
                      </div>
                    </div>
                    <div
                      class="MuiFormControl-root calendar-form-control"
                    >
                      <legend
                        class="MuiFormLabel-root"
                      >
                        Priority level (color)
                      </legend>
                      <div
                        class="MuiFormGroup-root"
                        role="radiogroup"
                      >
                        <label
                          class="MuiFormControlLabel-root"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary PrivateSwitchBase-checked-74 Mui-checked MuiIconButton-colorSecondary"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                checked=""
                                class="PrivateSwitchBase-input-76"
                                type="radio"
                                value="red"
                              />
                              <div
                                class="PrivateRadioButtonIcon-root-89 PrivateRadioButtonIcon-checked-91"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="MuiSvgIcon-root"
                                  focusable="false"
                                  role="presentation"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                  />
                                </svg>
                                <svg
                                  aria-hidden="true"
                                  class="MuiSvgIcon-root PrivateRadioButtonIcon-layer-90"
                                  focusable="false"
                                  role="presentation"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
                                  />
                                </svg>
                              </div>
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                          >
                            High Priority
                          </span>
                        </label>
                        <label
                          class="MuiFormControlLabel-root"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-76"
                                type="radio"
                                value="yellow"
                              />
                              <div
                                class="PrivateRadioButtonIcon-root-89"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="MuiSvgIcon-root"
                                  focusable="false"
                                  role="presentation"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                  />
                                </svg>
                                <svg
                                  aria-hidden="true"
                                  class="MuiSvgIcon-root PrivateRadioButtonIcon-layer-90"
                                  focusable="false"
                                  role="presentation"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
                                  />
                                </svg>
                              </div>
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                          >
                            Priority
                          </span>
                        </label>
                        <label
                          class="MuiFormControlLabel-root"
                        >
                          <span
                            aria-disabled="false"
                            class="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                          >
                            <span
                              class="MuiIconButton-label"
                            >
                              <input
                                class="PrivateSwitchBase-input-76"
                                type="radio"
                                value="green"
                              />
                              <div
                                class="PrivateRadioButtonIcon-root-89"
                              >
                                <svg
                                  aria-hidden="true"
                                  class="MuiSvgIcon-root"
                                  focusable="false"
                                  role="presentation"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                  />
                                </svg>
                                <svg
                                  aria-hidden="true"
                                  class="MuiSvgIcon-root PrivateRadioButtonIcon-layer-90"
                                  focusable="false"
                                  role="presentation"
                                  viewBox="0 0 24 24"
                                >
                                  <path
                                    d="M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
                                  />
                                </svg>
                              </div>
                            </span>
                            <span
                              class="MuiTouchRipple-root"
                            />
                          </span>
                          <span
                            class="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                          >
                            Low Priority
                          </span>
                        </label>
                      </div>
                    </div>
                    <div
                      class="buttons-row"
                    >
                      <button
                        class="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                        tabindex="0"
                        type="button"
                      >
                        <span
                          class="MuiButton-label"
                        >
                          Add Reminder
                        </span>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </button>
                      <button
                        class="MuiButtonBase-root MuiButton-root MuiButton-outlined"
                        tabindex="0"
                        type="button"
                      >
                        <span
                          class="MuiButton-label"
                        >
                          Cancel
                        </span>
                        <span
                          class="MuiTouchRipple-root"
                        />
                      </button>
                    </div>
                  </form>
                </div>
                <div
                  data-test="sentinelEnd"
                  tabindex="0"
                />
              </div>
            </body>
          }
        >
          <div
            onKeyDown={[Function]}
            role="presentation"
            style={
              Object {
                "bottom": 0,
                "left": 0,
                "position": "fixed",
                "right": 0,
                "top": 0,
                "zIndex": 1300,
              }
            }
          >
            <ForwardRef(SimpleBackdrop)
              onClick={[Function]}
              open={true}
            >
              <div
                aria-hidden={true}
                onClick={[Function]}
                style={
                  Object {
                    "WebkitTapHighlightColor": "transparent",
                    "backgroundColor": "rgba(0, 0, 0, 0.5)",
                    "bottom": 0,
                    "left": 0,
                    "position": "fixed",
                    "right": 0,
                    "top": 0,
                    "touchAction": "none",
                    "zIndex": -1,
                  }
                }
              />
            </ForwardRef(SimpleBackdrop)>
            <TrapFocus
              disableAutoFocus={false}
              disableEnforceFocus={false}
              disableRestoreFocus={false}
              getDoc={[Function]}
              isEnabled={[Function]}
              open={true}
            >
              <div
                data-test="sentinelStart"
                tabIndex={0}
              />
              <div
                className="calendar-form-container"
                tabIndex="-1"
              >
                <form
                  autoComplete="off"
                  noValidate={true}
                >
                  <WithStyles(ForwardRef(FormControl))
                    className="calendar-form-control"
                  >
                    <ForwardRef(FormControl)
                      className="calendar-form-control"
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth",
                          "marginDense": "MuiFormControl-marginDense",
                          "marginNormal": "MuiFormControl-marginNormal",
                          "root": "MuiFormControl-root",
                        }
                      }
                    >
                      <div
                        className="MuiFormControl-root calendar-form-control"
                      >
                        <WithStyles(ForwardRef(TextField))
                          disabled={true}
                          inputProps={
                            Object {
                              "readOnly": true,
                            }
                          }
                          label="Date"
                          value="1-9-2020"
                        >
                          <ForwardRef(TextField)
                            classes={
                              Object {
                                "root": "MuiTextField-root",
                              }
                            }
                            disabled={true}
                            inputProps={
                              Object {
                                "readOnly": true,
                              }
                            }
                            label="Date"
                            value="1-9-2020"
                          >
                            <WithStyles(ForwardRef(FormControl))
                              className="MuiTextField-root"
                              color="primary"
                              disabled={true}
                              error={false}
                              fullWidth={false}
                              required={false}
                              variant="standard"
                            >
                              <ForwardRef(FormControl)
                                className="MuiTextField-root"
                                classes={
                                  Object {
                                    "fullWidth": "MuiFormControl-fullWidth",
                                    "marginDense": "MuiFormControl-marginDense",
                                    "marginNormal": "MuiFormControl-marginNormal",
                                    "root": "MuiFormControl-root",
                                  }
                                }
                                color="primary"
                                disabled={true}
                                error={false}
                                fullWidth={false}
                                required={false}
                                variant="standard"
                              >
                                <div
                                  className="MuiFormControl-root MuiTextField-root"
                                >
                                  <WithStyles(ForwardRef(InputLabel))>
                                    <ForwardRef(InputLabel)
                                      classes={
                                        Object {
                                          "animated": "MuiInputLabel-animated",
                                          "asterisk": "MuiInputLabel-asterisk",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "filled": "MuiInputLabel-filled",
                                          "focused": "Mui-focused",
                                          "formControl": "MuiInputLabel-formControl",
                                          "marginDense": "MuiInputLabel-marginDense",
                                          "outlined": "MuiInputLabel-outlined",
                                          "required": "Mui-required",
                                          "root": "MuiInputLabel-root",
                                          "shrink": "MuiInputLabel-shrink",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(FormLabel))
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                                        classes={
                                          Object {
                                            "asterisk": "MuiInputLabel-asterisk",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "required": "Mui-required",
                                          }
                                        }
                                        data-shrink={true}
                                      >
                                        <ForwardRef(FormLabel)
                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                                          classes={
                                            Object {
                                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                              "colorSecondary": "MuiFormLabel-colorSecondary",
                                              "disabled": "Mui-disabled Mui-disabled",
                                              "error": "Mui-error Mui-error",
                                              "filled": "MuiFormLabel-filled",
                                              "focused": "Mui-focused Mui-focused",
                                              "required": "Mui-required Mui-required",
                                              "root": "MuiFormLabel-root",
                                            }
                                          }
                                          data-shrink={true}
                                        >
                                          <label
                                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink Mui-disabled Mui-disabled MuiFormLabel-filled"
                                            data-shrink={true}
                                          >
                                            Date
                                          </label>
                                        </ForwardRef(FormLabel)>
                                      </WithStyles(ForwardRef(FormLabel))>
                                    </ForwardRef(InputLabel)>
                                  </WithStyles(ForwardRef(InputLabel))>
                                  <WithStyles(ForwardRef(Input))
                                    autoFocus={false}
                                    fullWidth={false}
                                    inputProps={
                                      Object {
                                        "readOnly": true,
                                      }
                                    }
                                    multiline={false}
                                    value="1-9-2020"
                                  >
                                    <ForwardRef(Input)
                                      autoFocus={false}
                                      classes={
                                        Object {
                                          "colorSecondary": "MuiInput-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "focused": "Mui-focused",
                                          "formControl": "MuiInput-formControl",
                                          "fullWidth": "MuiInput-fullWidth",
                                          "input": "MuiInput-input",
                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                          "inputMultiline": "MuiInput-inputMultiline",
                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                          "marginDense": "MuiInput-marginDense",
                                          "multiline": "MuiInput-multiline",
                                          "root": "MuiInput-root",
                                          "underline": "MuiInput-underline",
                                        }
                                      }
                                      fullWidth={false}
                                      inputProps={
                                        Object {
                                          "readOnly": true,
                                        }
                                      }
                                      multiline={false}
                                      value="1-9-2020"
                                    >
                                      <WithStyles(ForwardRef(InputBase))
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root MuiInput-underline",
                                            "underline": null,
                                          }
                                        }
                                        fullWidth={false}
                                        inputComponent="input"
                                        inputProps={
                                          Object {
                                            "readOnly": true,
                                          }
                                        }
                                        multiline={false}
                                        type="text"
                                        value="1-9-2020"
                                      >
                                        <ForwardRef(InputBase)
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                              "adornedStart": "MuiInputBase-adornedStart",
                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled Mui-disabled",
                                              "error": "Mui-error Mui-error",
                                              "focused": "Mui-focused Mui-focused",
                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                              "input": "MuiInputBase-input MuiInput-input",
                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                            }
                                          }
                                          fullWidth={false}
                                          inputComponent="input"
                                          inputProps={
                                            Object {
                                              "readOnly": true,
                                            }
                                          }
                                          multiline={false}
                                          type="text"
                                          value="1-9-2020"
                                        >
                                          <div
                                            className="MuiInputBase-root MuiInput-root MuiInput-underline Mui-disabled Mui-disabled MuiInputBase-formControl MuiInput-formControl"
                                            onClick={[Function]}
                                          >
                                            <input
                                              aria-invalid={false}
                                              autoFocus={false}
                                              className="MuiInputBase-input MuiInput-input Mui-disabled Mui-disabled"
                                              disabled={true}
                                              onAnimationStart={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              readOnly={true}
                                              required={false}
                                              type="text"
                                              value="1-9-2020"
                                            />
                                          </div>
                                        </ForwardRef(InputBase)>
                                      </WithStyles(ForwardRef(InputBase))>
                                    </ForwardRef(Input)>
                                  </WithStyles(ForwardRef(Input))>
                                </div>
                              </ForwardRef(FormControl)>
                            </WithStyles(ForwardRef(FormControl))>
                          </ForwardRef(TextField)>
                        </WithStyles(ForwardRef(TextField))>
                      </div>
                    </ForwardRef(FormControl)>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="calendar-form-control"
                  >
                    <ForwardRef(FormControl)
                      className="calendar-form-control"
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth",
                          "marginDense": "MuiFormControl-marginDense",
                          "marginNormal": "MuiFormControl-marginNormal",
                          "root": "MuiFormControl-root",
                        }
                      }
                    >
                      <div
                        className="MuiFormControl-root calendar-form-control"
                      >
                        <WithStyles(ForwardRef(TextField))
                          label="Username"
                          onChange={[Function]}
                          value=""
                        >
                          <ForwardRef(TextField)
                            classes={
                              Object {
                                "root": "MuiTextField-root",
                              }
                            }
                            label="Username"
                            onChange={[Function]}
                            value=""
                          >
                            <WithStyles(ForwardRef(FormControl))
                              className="MuiTextField-root"
                              color="primary"
                              disabled={false}
                              error={false}
                              fullWidth={false}
                              required={false}
                              variant="standard"
                            >
                              <ForwardRef(FormControl)
                                className="MuiTextField-root"
                                classes={
                                  Object {
                                    "fullWidth": "MuiFormControl-fullWidth",
                                    "marginDense": "MuiFormControl-marginDense",
                                    "marginNormal": "MuiFormControl-marginNormal",
                                    "root": "MuiFormControl-root",
                                  }
                                }
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={false}
                                required={false}
                                variant="standard"
                              >
                                <div
                                  className="MuiFormControl-root MuiTextField-root"
                                >
                                  <WithStyles(ForwardRef(InputLabel))>
                                    <ForwardRef(InputLabel)
                                      classes={
                                        Object {
                                          "animated": "MuiInputLabel-animated",
                                          "asterisk": "MuiInputLabel-asterisk",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "filled": "MuiInputLabel-filled",
                                          "focused": "Mui-focused",
                                          "formControl": "MuiInputLabel-formControl",
                                          "marginDense": "MuiInputLabel-marginDense",
                                          "outlined": "MuiInputLabel-outlined",
                                          "required": "Mui-required",
                                          "root": "MuiInputLabel-root",
                                          "shrink": "MuiInputLabel-shrink",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(FormLabel))
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                        classes={
                                          Object {
                                            "asterisk": "MuiInputLabel-asterisk",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "required": "Mui-required",
                                          }
                                        }
                                        data-shrink={false}
                                      >
                                        <ForwardRef(FormLabel)
                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                          classes={
                                            Object {
                                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                              "colorSecondary": "MuiFormLabel-colorSecondary",
                                              "disabled": "Mui-disabled Mui-disabled",
                                              "error": "Mui-error Mui-error",
                                              "filled": "MuiFormLabel-filled",
                                              "focused": "Mui-focused Mui-focused",
                                              "required": "Mui-required Mui-required",
                                              "root": "MuiFormLabel-root",
                                            }
                                          }
                                          data-shrink={false}
                                        >
                                          <label
                                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                            data-shrink={false}
                                          >
                                            Username
                                          </label>
                                        </ForwardRef(FormLabel)>
                                      </WithStyles(ForwardRef(FormLabel))>
                                    </ForwardRef(InputLabel)>
                                  </WithStyles(ForwardRef(InputLabel))>
                                  <WithStyles(ForwardRef(Input))
                                    autoFocus={false}
                                    fullWidth={false}
                                    multiline={false}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <ForwardRef(Input)
                                      autoFocus={false}
                                      classes={
                                        Object {
                                          "colorSecondary": "MuiInput-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "focused": "Mui-focused",
                                          "formControl": "MuiInput-formControl",
                                          "fullWidth": "MuiInput-fullWidth",
                                          "input": "MuiInput-input",
                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                          "inputMultiline": "MuiInput-inputMultiline",
                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                          "marginDense": "MuiInput-marginDense",
                                          "multiline": "MuiInput-multiline",
                                          "root": "MuiInput-root",
                                          "underline": "MuiInput-underline",
                                        }
                                      }
                                      fullWidth={false}
                                      multiline={false}
                                      onChange={[Function]}
                                      value=""
                                    >
                                      <WithStyles(ForwardRef(InputBase))
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root MuiInput-underline",
                                            "underline": null,
                                          }
                                        }
                                        fullWidth={false}
                                        inputComponent="input"
                                        multiline={false}
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      >
                                        <ForwardRef(InputBase)
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                              "adornedStart": "MuiInputBase-adornedStart",
                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled Mui-disabled",
                                              "error": "Mui-error Mui-error",
                                              "focused": "Mui-focused Mui-focused",
                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                              "input": "MuiInputBase-input MuiInput-input",
                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                            }
                                          }
                                          fullWidth={false}
                                          inputComponent="input"
                                          multiline={false}
                                          onChange={[Function]}
                                          type="text"
                                          value=""
                                        >
                                          <div
                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                            onClick={[Function]}
                                          >
                                            <input
                                              aria-invalid={false}
                                              autoFocus={false}
                                              className="MuiInputBase-input MuiInput-input"
                                              disabled={false}
                                              onAnimationStart={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              required={false}
                                              type="text"
                                              value=""
                                            />
                                          </div>
                                        </ForwardRef(InputBase)>
                                      </WithStyles(ForwardRef(InputBase))>
                                    </ForwardRef(Input)>
                                  </WithStyles(ForwardRef(Input))>
                                </div>
                              </ForwardRef(FormControl)>
                            </WithStyles(ForwardRef(FormControl))>
                          </ForwardRef(TextField)>
                        </WithStyles(ForwardRef(TextField))>
                      </div>
                    </ForwardRef(FormControl)>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="calendar-form-control"
                  >
                    <ForwardRef(FormControl)
                      className="calendar-form-control"
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth",
                          "marginDense": "MuiFormControl-marginDense",
                          "marginNormal": "MuiFormControl-marginNormal",
                          "root": "MuiFormControl-root",
                        }
                      }
                    >
                      <div
                        className="MuiFormControl-root calendar-form-control"
                      >
                        <WithStyles(ForwardRef(TextField))
                          inputProps={
                            Object {
                              "maxLength": 30,
                            }
                          }
                          label="Reminder title"
                          onChange={[Function]}
                          value=""
                        >
                          <ForwardRef(TextField)
                            classes={
                              Object {
                                "root": "MuiTextField-root",
                              }
                            }
                            inputProps={
                              Object {
                                "maxLength": 30,
                              }
                            }
                            label="Reminder title"
                            onChange={[Function]}
                            value=""
                          >
                            <WithStyles(ForwardRef(FormControl))
                              className="MuiTextField-root"
                              color="primary"
                              disabled={false}
                              error={false}
                              fullWidth={false}
                              required={false}
                              variant="standard"
                            >
                              <ForwardRef(FormControl)
                                className="MuiTextField-root"
                                classes={
                                  Object {
                                    "fullWidth": "MuiFormControl-fullWidth",
                                    "marginDense": "MuiFormControl-marginDense",
                                    "marginNormal": "MuiFormControl-marginNormal",
                                    "root": "MuiFormControl-root",
                                  }
                                }
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={false}
                                required={false}
                                variant="standard"
                              >
                                <div
                                  className="MuiFormControl-root MuiTextField-root"
                                >
                                  <WithStyles(ForwardRef(InputLabel))>
                                    <ForwardRef(InputLabel)
                                      classes={
                                        Object {
                                          "animated": "MuiInputLabel-animated",
                                          "asterisk": "MuiInputLabel-asterisk",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "filled": "MuiInputLabel-filled",
                                          "focused": "Mui-focused",
                                          "formControl": "MuiInputLabel-formControl",
                                          "marginDense": "MuiInputLabel-marginDense",
                                          "outlined": "MuiInputLabel-outlined",
                                          "required": "Mui-required",
                                          "root": "MuiInputLabel-root",
                                          "shrink": "MuiInputLabel-shrink",
                                        }
                                      }
                                    >
                                      <WithStyles(ForwardRef(FormLabel))
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                        classes={
                                          Object {
                                            "asterisk": "MuiInputLabel-asterisk",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "required": "Mui-required",
                                          }
                                        }
                                        data-shrink={false}
                                      >
                                        <ForwardRef(FormLabel)
                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                          classes={
                                            Object {
                                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                              "colorSecondary": "MuiFormLabel-colorSecondary",
                                              "disabled": "Mui-disabled Mui-disabled",
                                              "error": "Mui-error Mui-error",
                                              "filled": "MuiFormLabel-filled",
                                              "focused": "Mui-focused Mui-focused",
                                              "required": "Mui-required Mui-required",
                                              "root": "MuiFormLabel-root",
                                            }
                                          }
                                          data-shrink={false}
                                        >
                                          <label
                                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated"
                                            data-shrink={false}
                                          >
                                            Reminder title
                                          </label>
                                        </ForwardRef(FormLabel)>
                                      </WithStyles(ForwardRef(FormLabel))>
                                    </ForwardRef(InputLabel)>
                                  </WithStyles(ForwardRef(InputLabel))>
                                  <WithStyles(ForwardRef(Input))
                                    autoFocus={false}
                                    fullWidth={false}
                                    inputProps={
                                      Object {
                                        "maxLength": 30,
                                      }
                                    }
                                    multiline={false}
                                    onChange={[Function]}
                                    value=""
                                  >
                                    <ForwardRef(Input)
                                      autoFocus={false}
                                      classes={
                                        Object {
                                          "colorSecondary": "MuiInput-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "focused": "Mui-focused",
                                          "formControl": "MuiInput-formControl",
                                          "fullWidth": "MuiInput-fullWidth",
                                          "input": "MuiInput-input",
                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                          "inputMultiline": "MuiInput-inputMultiline",
                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                          "marginDense": "MuiInput-marginDense",
                                          "multiline": "MuiInput-multiline",
                                          "root": "MuiInput-root",
                                          "underline": "MuiInput-underline",
                                        }
                                      }
                                      fullWidth={false}
                                      inputProps={
                                        Object {
                                          "maxLength": 30,
                                        }
                                      }
                                      multiline={false}
                                      onChange={[Function]}
                                      value=""
                                    >
                                      <WithStyles(ForwardRef(InputBase))
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root MuiInput-underline",
                                            "underline": null,
                                          }
                                        }
                                        fullWidth={false}
                                        inputComponent="input"
                                        inputProps={
                                          Object {
                                            "maxLength": 30,
                                          }
                                        }
                                        multiline={false}
                                        onChange={[Function]}
                                        type="text"
                                        value=""
                                      >
                                        <ForwardRef(InputBase)
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                              "adornedStart": "MuiInputBase-adornedStart",
                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled Mui-disabled",
                                              "error": "Mui-error Mui-error",
                                              "focused": "Mui-focused Mui-focused",
                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                              "input": "MuiInputBase-input MuiInput-input",
                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                            }
                                          }
                                          fullWidth={false}
                                          inputComponent="input"
                                          inputProps={
                                            Object {
                                              "maxLength": 30,
                                            }
                                          }
                                          multiline={false}
                                          onChange={[Function]}
                                          type="text"
                                          value=""
                                        >
                                          <div
                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                            onClick={[Function]}
                                          >
                                            <input
                                              aria-invalid={false}
                                              autoFocus={false}
                                              className="MuiInputBase-input MuiInput-input"
                                              disabled={false}
                                              maxLength={30}
                                              onAnimationStart={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              required={false}
                                              type="text"
                                              value=""
                                            />
                                          </div>
                                        </ForwardRef(InputBase)>
                                      </WithStyles(ForwardRef(InputBase))>
                                    </ForwardRef(Input)>
                                  </WithStyles(ForwardRef(Input))>
                                </div>
                              </ForwardRef(FormControl)>
                            </WithStyles(ForwardRef(FormControl))>
                          </ForwardRef(TextField)>
                        </WithStyles(ForwardRef(TextField))>
                      </div>
                    </ForwardRef(FormControl)>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="calendar-form-control"
                  >
                    <ForwardRef(FormControl)
                      className="calendar-form-control"
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth",
                          "marginDense": "MuiFormControl-marginDense",
                          "marginNormal": "MuiFormControl-marginNormal",
                          "root": "MuiFormControl-root",
                        }
                      }
                    >
                      <div
                        className="MuiFormControl-root calendar-form-control"
                      >
                        <div
                          className="current-city"
                        >
                          <div>
                            City: 
                          </div>
                          <div>
                            City Forecast:
                             
                          </div>
                        </div>
                        <AlgoliaPlaces
                          language="en"
                          onChange={[Function]}
                          onClear={null}
                          onCursorChanged={null}
                          onError={null}
                          onLimit={null}
                          onSuggestions={null}
                          options={Object {}}
                          placeholder="Preferred city"
                          placesRef={null}
                          type="city"
                        >
                          <div>
                            <input
                              aria-label="Preferred city"
                              language="en"
                              placeholder="Preferred city"
                              type="city"
                            />
                          </div>
                        </AlgoliaPlaces>
                      </div>
                    </ForwardRef(FormControl)>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="calendar-form-control"
                  >
                    <ForwardRef(FormControl)
                      className="calendar-form-control"
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth",
                          "marginDense": "MuiFormControl-marginDense",
                          "marginNormal": "MuiFormControl-marginNormal",
                          "root": "MuiFormControl-root",
                        }
                      }
                    >
                      <div
                        className="MuiFormControl-root calendar-form-control"
                      >
                        <WithStyles(ForwardRef(TextField))
                          InputLabelProps={
                            Object {
                              "shrink": true,
                            }
                          }
                          defaultValue="07:30"
                          inputProps={
                            Object {
                              "step": 300,
                            }
                          }
                          label="Time"
                          onChange={[Function]}
                          type="time"
                        >
                          <ForwardRef(TextField)
                            InputLabelProps={
                              Object {
                                "shrink": true,
                              }
                            }
                            classes={
                              Object {
                                "root": "MuiTextField-root",
                              }
                            }
                            defaultValue="07:30"
                            inputProps={
                              Object {
                                "step": 300,
                              }
                            }
                            label="Time"
                            onChange={[Function]}
                            type="time"
                          >
                            <WithStyles(ForwardRef(FormControl))
                              className="MuiTextField-root"
                              color="primary"
                              disabled={false}
                              error={false}
                              fullWidth={false}
                              required={false}
                              variant="standard"
                            >
                              <ForwardRef(FormControl)
                                className="MuiTextField-root"
                                classes={
                                  Object {
                                    "fullWidth": "MuiFormControl-fullWidth",
                                    "marginDense": "MuiFormControl-marginDense",
                                    "marginNormal": "MuiFormControl-marginNormal",
                                    "root": "MuiFormControl-root",
                                  }
                                }
                                color="primary"
                                disabled={false}
                                error={false}
                                fullWidth={false}
                                required={false}
                                variant="standard"
                              >
                                <div
                                  className="MuiFormControl-root MuiTextField-root"
                                >
                                  <WithStyles(ForwardRef(InputLabel))
                                    shrink={true}
                                  >
                                    <ForwardRef(InputLabel)
                                      classes={
                                        Object {
                                          "animated": "MuiInputLabel-animated",
                                          "asterisk": "MuiInputLabel-asterisk",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "filled": "MuiInputLabel-filled",
                                          "focused": "Mui-focused",
                                          "formControl": "MuiInputLabel-formControl",
                                          "marginDense": "MuiInputLabel-marginDense",
                                          "outlined": "MuiInputLabel-outlined",
                                          "required": "Mui-required",
                                          "root": "MuiInputLabel-root",
                                          "shrink": "MuiInputLabel-shrink",
                                        }
                                      }
                                      shrink={true}
                                    >
                                      <WithStyles(ForwardRef(FormLabel))
                                        className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                                        classes={
                                          Object {
                                            "asterisk": "MuiInputLabel-asterisk",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "required": "Mui-required",
                                          }
                                        }
                                        data-shrink={true}
                                      >
                                        <ForwardRef(FormLabel)
                                          className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink"
                                          classes={
                                            Object {
                                              "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                              "colorSecondary": "MuiFormLabel-colorSecondary",
                                              "disabled": "Mui-disabled Mui-disabled",
                                              "error": "Mui-error Mui-error",
                                              "filled": "MuiFormLabel-filled",
                                              "focused": "Mui-focused Mui-focused",
                                              "required": "Mui-required Mui-required",
                                              "root": "MuiFormLabel-root",
                                            }
                                          }
                                          data-shrink={true}
                                        >
                                          <label
                                            className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-shrink MuiFormLabel-filled"
                                            data-shrink={true}
                                          >
                                            Time
                                          </label>
                                        </ForwardRef(FormLabel)>
                                      </WithStyles(ForwardRef(FormLabel))>
                                    </ForwardRef(InputLabel)>
                                  </WithStyles(ForwardRef(InputLabel))>
                                  <WithStyles(ForwardRef(Input))
                                    autoFocus={false}
                                    defaultValue="07:30"
                                    fullWidth={false}
                                    inputProps={
                                      Object {
                                        "step": 300,
                                      }
                                    }
                                    multiline={false}
                                    onChange={[Function]}
                                    type="time"
                                  >
                                    <ForwardRef(Input)
                                      autoFocus={false}
                                      classes={
                                        Object {
                                          "colorSecondary": "MuiInput-colorSecondary",
                                          "disabled": "Mui-disabled",
                                          "error": "Mui-error",
                                          "focused": "Mui-focused",
                                          "formControl": "MuiInput-formControl",
                                          "fullWidth": "MuiInput-fullWidth",
                                          "input": "MuiInput-input",
                                          "inputMarginDense": "MuiInput-inputMarginDense",
                                          "inputMultiline": "MuiInput-inputMultiline",
                                          "inputTypeSearch": "MuiInput-inputTypeSearch",
                                          "marginDense": "MuiInput-marginDense",
                                          "multiline": "MuiInput-multiline",
                                          "root": "MuiInput-root",
                                          "underline": "MuiInput-underline",
                                        }
                                      }
                                      defaultValue="07:30"
                                      fullWidth={false}
                                      inputProps={
                                        Object {
                                          "step": 300,
                                        }
                                      }
                                      multiline={false}
                                      onChange={[Function]}
                                      type="time"
                                    >
                                      <WithStyles(ForwardRef(InputBase))
                                        autoFocus={false}
                                        classes={
                                          Object {
                                            "colorSecondary": "MuiInput-colorSecondary",
                                            "disabled": "Mui-disabled",
                                            "error": "Mui-error",
                                            "focused": "Mui-focused",
                                            "formControl": "MuiInput-formControl",
                                            "fullWidth": "MuiInput-fullWidth",
                                            "input": "MuiInput-input",
                                            "inputMarginDense": "MuiInput-inputMarginDense",
                                            "inputMultiline": "MuiInput-inputMultiline",
                                            "inputTypeSearch": "MuiInput-inputTypeSearch",
                                            "marginDense": "MuiInput-marginDense",
                                            "multiline": "MuiInput-multiline",
                                            "root": "MuiInput-root MuiInput-underline",
                                            "underline": null,
                                          }
                                        }
                                        defaultValue="07:30"
                                        fullWidth={false}
                                        inputComponent="input"
                                        inputProps={
                                          Object {
                                            "step": 300,
                                          }
                                        }
                                        multiline={false}
                                        onChange={[Function]}
                                        type="time"
                                      >
                                        <ForwardRef(InputBase)
                                          autoFocus={false}
                                          classes={
                                            Object {
                                              "adornedEnd": "MuiInputBase-adornedEnd",
                                              "adornedStart": "MuiInputBase-adornedStart",
                                              "colorSecondary": "MuiInputBase-colorSecondary MuiInput-colorSecondary",
                                              "disabled": "Mui-disabled Mui-disabled",
                                              "error": "Mui-error Mui-error",
                                              "focused": "Mui-focused Mui-focused",
                                              "formControl": "MuiInputBase-formControl MuiInput-formControl",
                                              "fullWidth": "MuiInputBase-fullWidth MuiInput-fullWidth",
                                              "input": "MuiInputBase-input MuiInput-input",
                                              "inputAdornedEnd": "MuiInputBase-inputAdornedEnd",
                                              "inputAdornedStart": "MuiInputBase-inputAdornedStart",
                                              "inputHiddenLabel": "MuiInputBase-inputHiddenLabel",
                                              "inputMarginDense": "MuiInputBase-inputMarginDense MuiInput-inputMarginDense",
                                              "inputMultiline": "MuiInputBase-inputMultiline MuiInput-inputMultiline",
                                              "inputTypeSearch": "MuiInputBase-inputTypeSearch MuiInput-inputTypeSearch",
                                              "marginDense": "MuiInputBase-marginDense MuiInput-marginDense",
                                              "multiline": "MuiInputBase-multiline MuiInput-multiline",
                                              "root": "MuiInputBase-root MuiInput-root MuiInput-underline",
                                            }
                                          }
                                          defaultValue="07:30"
                                          fullWidth={false}
                                          inputComponent="input"
                                          inputProps={
                                            Object {
                                              "step": 300,
                                            }
                                          }
                                          multiline={false}
                                          onChange={[Function]}
                                          type="time"
                                        >
                                          <div
                                            className="MuiInputBase-root MuiInput-root MuiInput-underline MuiInputBase-formControl MuiInput-formControl"
                                            onClick={[Function]}
                                          >
                                            <input
                                              aria-invalid={false}
                                              autoFocus={false}
                                              className="MuiInputBase-input MuiInput-input"
                                              defaultValue="07:30"
                                              disabled={false}
                                              onAnimationStart={[Function]}
                                              onBlur={[Function]}
                                              onChange={[Function]}
                                              onFocus={[Function]}
                                              required={false}
                                              step={300}
                                              type="time"
                                            />
                                          </div>
                                        </ForwardRef(InputBase)>
                                      </WithStyles(ForwardRef(InputBase))>
                                    </ForwardRef(Input)>
                                  </WithStyles(ForwardRef(Input))>
                                </div>
                              </ForwardRef(FormControl)>
                            </WithStyles(ForwardRef(FormControl))>
                          </ForwardRef(TextField)>
                        </WithStyles(ForwardRef(TextField))>
                      </div>
                    </ForwardRef(FormControl)>
                  </WithStyles(ForwardRef(FormControl))>
                  <WithStyles(ForwardRef(FormControl))
                    className="calendar-form-control"
                  >
                    <ForwardRef(FormControl)
                      className="calendar-form-control"
                      classes={
                        Object {
                          "fullWidth": "MuiFormControl-fullWidth",
                          "marginDense": "MuiFormControl-marginDense",
                          "marginNormal": "MuiFormControl-marginNormal",
                          "root": "MuiFormControl-root",
                        }
                      }
                    >
                      <div
                        className="MuiFormControl-root calendar-form-control"
                      >
                        <WithStyles(ForwardRef(FormLabel))
                          component="legend"
                        >
                          <ForwardRef(FormLabel)
                            classes={
                              Object {
                                "asterisk": "MuiFormLabel-asterisk",
                                "colorSecondary": "MuiFormLabel-colorSecondary",
                                "disabled": "Mui-disabled",
                                "error": "Mui-error",
                                "filled": "MuiFormLabel-filled",
                                "focused": "Mui-focused",
                                "required": "Mui-required",
                                "root": "MuiFormLabel-root",
                              }
                            }
                            component="legend"
                          >
                            <legend
                              className="MuiFormLabel-root"
                            >
                              Priority level (color)
                            </legend>
                          </ForwardRef(FormLabel)>
                        </WithStyles(ForwardRef(FormLabel))>
                        <ForwardRef(RadioGroup)
                          onChange={[Function]}
                          value="red"
                        >
                          <WithStyles(ForwardRef(FormGroup))
                            role="radiogroup"
                          >
                            <ForwardRef(FormGroup)
                              classes={
                                Object {
                                  "root": "MuiFormGroup-root",
                                  "row": "MuiFormGroup-row",
                                }
                              }
                              role="radiogroup"
                            >
                              <div
                                className="MuiFormGroup-root"
                                role="radiogroup"
                              >
                                <WithStyles(ForwardRef(FormControlLabel))
                                  control={<ForwardRef(WithStyles) />}
                                  label="High Priority"
                                  value="red"
                                >
                                  <ForwardRef(FormControlLabel)
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "label": "MuiFormControlLabel-label",
                                        "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                        "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                        "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                        "root": "MuiFormControlLabel-root",
                                      }
                                    }
                                    control={<ForwardRef(WithStyles) />}
                                    label="High Priority"
                                    value="red"
                                  >
                                    <label
                                      className="MuiFormControlLabel-root"
                                    >
                                      <WithStyles(ForwardRef(Radio))
                                        disabled={false}
                                        value="red"
                                      >
                                        <ForwardRef(Radio)
                                          classes={
                                            Object {
                                              "checked": "Mui-checked",
                                              "colorPrimary": "MuiRadio-colorPrimary",
                                              "colorSecondary": "MuiRadio-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "root": "MuiRadio-root",
                                            }
                                          }
                                          disabled={false}
                                          value="red"
                                        >
                                          <WithStyles(ForwardRef(SwitchBase))
                                            checked={true}
                                            checkedIcon={
                                              <ForwardRef(WithStyles)
                                                checked={true}
                                                fontSize="default"
                                              />
                                            }
                                            classes={
                                              Object {
                                                "checked": "Mui-checked",
                                                "disabled": "Mui-disabled",
                                                "root": "MuiRadio-root MuiRadio-colorSecondary",
                                              }
                                            }
                                            color="secondary"
                                            disabled={false}
                                            icon={
                                              <ForwardRef(WithStyles)
                                                fontSize="default"
                                              />
                                            }
                                            onChange={[Function]}
                                            type="radio"
                                            value="red"
                                          >
                                            <ForwardRef(SwitchBase)
                                              checked={true}
                                              checkedIcon={
                                                <ForwardRef(WithStyles)
                                                  checked={true}
                                                  fontSize="default"
                                                />
                                              }
                                              classes={
                                                Object {
                                                  "checked": "PrivateSwitchBase-checked-74 Mui-checked",
                                                  "disabled": "PrivateSwitchBase-disabled-75 Mui-disabled",
                                                  "input": "PrivateSwitchBase-input-76",
                                                  "root": "PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary",
                                                }
                                              }
                                              color="secondary"
                                              disabled={false}
                                              icon={
                                                <ForwardRef(WithStyles)
                                                  fontSize="default"
                                                />
                                              }
                                              onChange={[Function]}
                                              type="radio"
                                              value="red"
                                            >
                                              <WithStyles(ForwardRef(IconButton))
                                                className="PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary PrivateSwitchBase-checked-74 Mui-checked"
                                                color="secondary"
                                                component="span"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(IconButton)
                                                  className="PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary PrivateSwitchBase-checked-74 Mui-checked"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  color="secondary"
                                                  component="span"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    centerRipple={true}
                                                    className="MuiIconButton-root PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary PrivateSwitchBase-checked-74 Mui-checked MuiIconButton-colorSecondary"
                                                    component="span"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      centerRipple={true}
                                                      className="MuiIconButton-root PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary PrivateSwitchBase-checked-74 Mui-checked MuiIconButton-colorSecondary"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="span"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      tabIndex={null}
                                                    >
                                                      <span
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary PrivateSwitchBase-checked-74 Mui-checked MuiIconButton-colorSecondary"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <input
                                                            checked={true}
                                                            className="PrivateSwitchBase-input-76"
                                                            disabled={false}
                                                            onChange={[Function]}
                                                            type="radio"
                                                            value="red"
                                                          />
                                                          <WithStyles(RadioButtonIcon)
                                                            checked={true}
                                                            fontSize="default"
                                                          >
                                                            <RadioButtonIcon
                                                              checked={true}
                                                              classes={
                                                                Object {
                                                                  "checked": "PrivateRadioButtonIcon-checked-91",
                                                                  "layer": "PrivateRadioButtonIcon-layer-90",
                                                                  "root": "PrivateRadioButtonIcon-root-89",
                                                                }
                                                              }
                                                              fontSize="default"
                                                            >
                                                              <div
                                                                className="PrivateRadioButtonIcon-root-89 PrivateRadioButtonIcon-checked-91"
                                                              >
                                                                <ForwardRef
                                                                  fontSize="default"
                                                                >
                                                                  <WithStyles(ForwardRef(SvgIcon))
                                                                    fontSize="default"
                                                                  >
                                                                    <ForwardRef(SvgIcon)
                                                                      classes={
                                                                        Object {
                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                          "root": "MuiSvgIcon-root",
                                                                        }
                                                                      }
                                                                      fontSize="default"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        className="MuiSvgIcon-root"
                                                                        focusable="false"
                                                                        role="presentation"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <path
                                                                          d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                                                        />
                                                                      </svg>
                                                                    </ForwardRef(SvgIcon)>
                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                </ForwardRef>
                                                                <ForwardRef
                                                                  className="PrivateRadioButtonIcon-layer-90"
                                                                  fontSize="default"
                                                                >
                                                                  <WithStyles(ForwardRef(SvgIcon))
                                                                    className="PrivateRadioButtonIcon-layer-90"
                                                                    fontSize="default"
                                                                  >
                                                                    <ForwardRef(SvgIcon)
                                                                      className="PrivateRadioButtonIcon-layer-90"
                                                                      classes={
                                                                        Object {
                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                          "root": "MuiSvgIcon-root",
                                                                        }
                                                                      }
                                                                      fontSize="default"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        className="MuiSvgIcon-root PrivateRadioButtonIcon-layer-90"
                                                                        focusable="false"
                                                                        role="presentation"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <path
                                                                          d="M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
                                                                        />
                                                                      </svg>
                                                                    </ForwardRef(SvgIcon)>
                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                </ForwardRef>
                                                              </div>
                                                            </RadioButtonIcon>
                                                          </WithStyles(RadioButtonIcon)>
                                                        </span>
                                                        <NoSsr>
                                                          <WithStyles(undefined)
                                                            center={true}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={true}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(undefined)>
                                                        </NoSsr>
                                                      </span>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </ForwardRef(SwitchBase)>
                                          </WithStyles(ForwardRef(SwitchBase))>
                                        </ForwardRef(Radio)>
                                      </WithStyles(ForwardRef(Radio))>
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiFormControlLabel-label"
                                        component="span"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiFormControlLabel-label"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="span"
                                        >
                                          <span
                                            className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                          >
                                            High Priority
                                          </span>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </label>
                                  </ForwardRef(FormControlLabel)>
                                </WithStyles(ForwardRef(FormControlLabel))>
                                <WithStyles(ForwardRef(FormControlLabel))
                                  control={<ForwardRef(WithStyles) />}
                                  label="Priority"
                                  value="yellow"
                                >
                                  <ForwardRef(FormControlLabel)
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "label": "MuiFormControlLabel-label",
                                        "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                        "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                        "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                        "root": "MuiFormControlLabel-root",
                                      }
                                    }
                                    control={<ForwardRef(WithStyles) />}
                                    label="Priority"
                                    value="yellow"
                                  >
                                    <label
                                      className="MuiFormControlLabel-root"
                                    >
                                      <WithStyles(ForwardRef(Radio))
                                        disabled={false}
                                        value="yellow"
                                      >
                                        <ForwardRef(Radio)
                                          classes={
                                            Object {
                                              "checked": "Mui-checked",
                                              "colorPrimary": "MuiRadio-colorPrimary",
                                              "colorSecondary": "MuiRadio-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "root": "MuiRadio-root",
                                            }
                                          }
                                          disabled={false}
                                          value="yellow"
                                        >
                                          <WithStyles(ForwardRef(SwitchBase))
                                            checked={false}
                                            checkedIcon={
                                              <ForwardRef(WithStyles)
                                                checked={true}
                                                fontSize="default"
                                              />
                                            }
                                            classes={
                                              Object {
                                                "checked": "Mui-checked",
                                                "disabled": "Mui-disabled",
                                                "root": "MuiRadio-root MuiRadio-colorSecondary",
                                              }
                                            }
                                            color="secondary"
                                            disabled={false}
                                            icon={
                                              <ForwardRef(WithStyles)
                                                fontSize="default"
                                              />
                                            }
                                            onChange={[Function]}
                                            type="radio"
                                            value="yellow"
                                          >
                                            <ForwardRef(SwitchBase)
                                              checked={false}
                                              checkedIcon={
                                                <ForwardRef(WithStyles)
                                                  checked={true}
                                                  fontSize="default"
                                                />
                                              }
                                              classes={
                                                Object {
                                                  "checked": "PrivateSwitchBase-checked-74 Mui-checked",
                                                  "disabled": "PrivateSwitchBase-disabled-75 Mui-disabled",
                                                  "input": "PrivateSwitchBase-input-76",
                                                  "root": "PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary",
                                                }
                                              }
                                              color="secondary"
                                              disabled={false}
                                              icon={
                                                <ForwardRef(WithStyles)
                                                  fontSize="default"
                                                />
                                              }
                                              onChange={[Function]}
                                              type="radio"
                                              value="yellow"
                                            >
                                              <WithStyles(ForwardRef(IconButton))
                                                className="PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary"
                                                color="secondary"
                                                component="span"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(IconButton)
                                                  className="PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  color="secondary"
                                                  component="span"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    centerRipple={true}
                                                    className="MuiIconButton-root PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                                                    component="span"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      centerRipple={true}
                                                      className="MuiIconButton-root PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="span"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      tabIndex={null}
                                                    >
                                                      <span
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <input
                                                            checked={false}
                                                            className="PrivateSwitchBase-input-76"
                                                            disabled={false}
                                                            onChange={[Function]}
                                                            type="radio"
                                                            value="yellow"
                                                          />
                                                          <WithStyles(RadioButtonIcon)
                                                            fontSize="default"
                                                          >
                                                            <RadioButtonIcon
                                                              classes={
                                                                Object {
                                                                  "checked": "PrivateRadioButtonIcon-checked-91",
                                                                  "layer": "PrivateRadioButtonIcon-layer-90",
                                                                  "root": "PrivateRadioButtonIcon-root-89",
                                                                }
                                                              }
                                                              fontSize="default"
                                                            >
                                                              <div
                                                                className="PrivateRadioButtonIcon-root-89"
                                                              >
                                                                <ForwardRef
                                                                  fontSize="default"
                                                                >
                                                                  <WithStyles(ForwardRef(SvgIcon))
                                                                    fontSize="default"
                                                                  >
                                                                    <ForwardRef(SvgIcon)
                                                                      classes={
                                                                        Object {
                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                          "root": "MuiSvgIcon-root",
                                                                        }
                                                                      }
                                                                      fontSize="default"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        className="MuiSvgIcon-root"
                                                                        focusable="false"
                                                                        role="presentation"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <path
                                                                          d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                                                        />
                                                                      </svg>
                                                                    </ForwardRef(SvgIcon)>
                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                </ForwardRef>
                                                                <ForwardRef
                                                                  className="PrivateRadioButtonIcon-layer-90"
                                                                  fontSize="default"
                                                                >
                                                                  <WithStyles(ForwardRef(SvgIcon))
                                                                    className="PrivateRadioButtonIcon-layer-90"
                                                                    fontSize="default"
                                                                  >
                                                                    <ForwardRef(SvgIcon)
                                                                      className="PrivateRadioButtonIcon-layer-90"
                                                                      classes={
                                                                        Object {
                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                          "root": "MuiSvgIcon-root",
                                                                        }
                                                                      }
                                                                      fontSize="default"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        className="MuiSvgIcon-root PrivateRadioButtonIcon-layer-90"
                                                                        focusable="false"
                                                                        role="presentation"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <path
                                                                          d="M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
                                                                        />
                                                                      </svg>
                                                                    </ForwardRef(SvgIcon)>
                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                </ForwardRef>
                                                              </div>
                                                            </RadioButtonIcon>
                                                          </WithStyles(RadioButtonIcon)>
                                                        </span>
                                                        <NoSsr>
                                                          <WithStyles(undefined)
                                                            center={true}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={true}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(undefined)>
                                                        </NoSsr>
                                                      </span>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </ForwardRef(SwitchBase)>
                                          </WithStyles(ForwardRef(SwitchBase))>
                                        </ForwardRef(Radio)>
                                      </WithStyles(ForwardRef(Radio))>
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiFormControlLabel-label"
                                        component="span"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiFormControlLabel-label"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="span"
                                        >
                                          <span
                                            className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                          >
                                            Priority
                                          </span>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </label>
                                  </ForwardRef(FormControlLabel)>
                                </WithStyles(ForwardRef(FormControlLabel))>
                                <WithStyles(ForwardRef(FormControlLabel))
                                  control={<ForwardRef(WithStyles) />}
                                  label="Low Priority"
                                  value="green"
                                >
                                  <ForwardRef(FormControlLabel)
                                    classes={
                                      Object {
                                        "disabled": "Mui-disabled",
                                        "label": "MuiFormControlLabel-label",
                                        "labelPlacementBottom": "MuiFormControlLabel-labelPlacementBottom",
                                        "labelPlacementStart": "MuiFormControlLabel-labelPlacementStart",
                                        "labelPlacementTop": "MuiFormControlLabel-labelPlacementTop",
                                        "root": "MuiFormControlLabel-root",
                                      }
                                    }
                                    control={<ForwardRef(WithStyles) />}
                                    label="Low Priority"
                                    value="green"
                                  >
                                    <label
                                      className="MuiFormControlLabel-root"
                                    >
                                      <WithStyles(ForwardRef(Radio))
                                        disabled={false}
                                        value="green"
                                      >
                                        <ForwardRef(Radio)
                                          classes={
                                            Object {
                                              "checked": "Mui-checked",
                                              "colorPrimary": "MuiRadio-colorPrimary",
                                              "colorSecondary": "MuiRadio-colorSecondary",
                                              "disabled": "Mui-disabled",
                                              "root": "MuiRadio-root",
                                            }
                                          }
                                          disabled={false}
                                          value="green"
                                        >
                                          <WithStyles(ForwardRef(SwitchBase))
                                            checked={false}
                                            checkedIcon={
                                              <ForwardRef(WithStyles)
                                                checked={true}
                                                fontSize="default"
                                              />
                                            }
                                            classes={
                                              Object {
                                                "checked": "Mui-checked",
                                                "disabled": "Mui-disabled",
                                                "root": "MuiRadio-root MuiRadio-colorSecondary",
                                              }
                                            }
                                            color="secondary"
                                            disabled={false}
                                            icon={
                                              <ForwardRef(WithStyles)
                                                fontSize="default"
                                              />
                                            }
                                            onChange={[Function]}
                                            type="radio"
                                            value="green"
                                          >
                                            <ForwardRef(SwitchBase)
                                              checked={false}
                                              checkedIcon={
                                                <ForwardRef(WithStyles)
                                                  checked={true}
                                                  fontSize="default"
                                                />
                                              }
                                              classes={
                                                Object {
                                                  "checked": "PrivateSwitchBase-checked-74 Mui-checked",
                                                  "disabled": "PrivateSwitchBase-disabled-75 Mui-disabled",
                                                  "input": "PrivateSwitchBase-input-76",
                                                  "root": "PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary",
                                                }
                                              }
                                              color="secondary"
                                              disabled={false}
                                              icon={
                                                <ForwardRef(WithStyles)
                                                  fontSize="default"
                                                />
                                              }
                                              onChange={[Function]}
                                              type="radio"
                                              value="green"
                                            >
                                              <WithStyles(ForwardRef(IconButton))
                                                className="PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary"
                                                color="secondary"
                                                component="span"
                                                disabled={false}
                                                onBlur={[Function]}
                                                onFocus={[Function]}
                                                tabIndex={null}
                                              >
                                                <ForwardRef(IconButton)
                                                  className="PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary"
                                                  classes={
                                                    Object {
                                                      "colorInherit": "MuiIconButton-colorInherit",
                                                      "colorPrimary": "MuiIconButton-colorPrimary",
                                                      "colorSecondary": "MuiIconButton-colorSecondary",
                                                      "disabled": "Mui-disabled",
                                                      "edgeEnd": "MuiIconButton-edgeEnd",
                                                      "edgeStart": "MuiIconButton-edgeStart",
                                                      "label": "MuiIconButton-label",
                                                      "root": "MuiIconButton-root",
                                                      "sizeSmall": "MuiIconButton-sizeSmall",
                                                    }
                                                  }
                                                  color="secondary"
                                                  component="span"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onFocus={[Function]}
                                                  tabIndex={null}
                                                >
                                                  <WithStyles(ForwardRef(ButtonBase))
                                                    centerRipple={true}
                                                    className="MuiIconButton-root PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                                                    component="span"
                                                    disabled={false}
                                                    focusRipple={true}
                                                    onBlur={[Function]}
                                                    onFocus={[Function]}
                                                    tabIndex={null}
                                                  >
                                                    <ForwardRef(ButtonBase)
                                                      centerRipple={true}
                                                      className="MuiIconButton-root PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                                                      classes={
                                                        Object {
                                                          "disabled": "Mui-disabled",
                                                          "focusVisible": "Mui-focusVisible",
                                                          "root": "MuiButtonBase-root",
                                                        }
                                                      }
                                                      component="span"
                                                      disabled={false}
                                                      focusRipple={true}
                                                      onBlur={[Function]}
                                                      onFocus={[Function]}
                                                      tabIndex={null}
                                                    >
                                                      <span
                                                        aria-disabled={false}
                                                        className="MuiButtonBase-root MuiIconButton-root PrivateSwitchBase-root-73 MuiRadio-root MuiRadio-colorSecondary MuiIconButton-colorSecondary"
                                                        onBlur={[Function]}
                                                        onDragLeave={[Function]}
                                                        onFocus={[Function]}
                                                        onKeyDown={[Function]}
                                                        onKeyUp={[Function]}
                                                        onMouseDown={[Function]}
                                                        onMouseLeave={[Function]}
                                                        onMouseUp={[Function]}
                                                        onTouchEnd={[Function]}
                                                        onTouchMove={[Function]}
                                                        onTouchStart={[Function]}
                                                        tabIndex={null}
                                                      >
                                                        <span
                                                          className="MuiIconButton-label"
                                                        >
                                                          <input
                                                            checked={false}
                                                            className="PrivateSwitchBase-input-76"
                                                            disabled={false}
                                                            onChange={[Function]}
                                                            type="radio"
                                                            value="green"
                                                          />
                                                          <WithStyles(RadioButtonIcon)
                                                            fontSize="default"
                                                          >
                                                            <RadioButtonIcon
                                                              classes={
                                                                Object {
                                                                  "checked": "PrivateRadioButtonIcon-checked-91",
                                                                  "layer": "PrivateRadioButtonIcon-layer-90",
                                                                  "root": "PrivateRadioButtonIcon-root-89",
                                                                }
                                                              }
                                                              fontSize="default"
                                                            >
                                                              <div
                                                                className="PrivateRadioButtonIcon-root-89"
                                                              >
                                                                <ForwardRef
                                                                  fontSize="default"
                                                                >
                                                                  <WithStyles(ForwardRef(SvgIcon))
                                                                    fontSize="default"
                                                                  >
                                                                    <ForwardRef(SvgIcon)
                                                                      classes={
                                                                        Object {
                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                          "root": "MuiSvgIcon-root",
                                                                        }
                                                                      }
                                                                      fontSize="default"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        className="MuiSvgIcon-root"
                                                                        focusable="false"
                                                                        role="presentation"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <path
                                                                          d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z"
                                                                        />
                                                                      </svg>
                                                                    </ForwardRef(SvgIcon)>
                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                </ForwardRef>
                                                                <ForwardRef
                                                                  className="PrivateRadioButtonIcon-layer-90"
                                                                  fontSize="default"
                                                                >
                                                                  <WithStyles(ForwardRef(SvgIcon))
                                                                    className="PrivateRadioButtonIcon-layer-90"
                                                                    fontSize="default"
                                                                  >
                                                                    <ForwardRef(SvgIcon)
                                                                      className="PrivateRadioButtonIcon-layer-90"
                                                                      classes={
                                                                        Object {
                                                                          "colorAction": "MuiSvgIcon-colorAction",
                                                                          "colorDisabled": "MuiSvgIcon-colorDisabled",
                                                                          "colorError": "MuiSvgIcon-colorError",
                                                                          "colorPrimary": "MuiSvgIcon-colorPrimary",
                                                                          "colorSecondary": "MuiSvgIcon-colorSecondary",
                                                                          "fontSizeInherit": "MuiSvgIcon-fontSizeInherit",
                                                                          "fontSizeLarge": "MuiSvgIcon-fontSizeLarge",
                                                                          "fontSizeSmall": "MuiSvgIcon-fontSizeSmall",
                                                                          "root": "MuiSvgIcon-root",
                                                                        }
                                                                      }
                                                                      fontSize="default"
                                                                    >
                                                                      <svg
                                                                        aria-hidden="true"
                                                                        className="MuiSvgIcon-root PrivateRadioButtonIcon-layer-90"
                                                                        focusable="false"
                                                                        role="presentation"
                                                                        viewBox="0 0 24 24"
                                                                      >
                                                                        <path
                                                                          d="M8.465 8.465C9.37 7.56 10.62 7 12 7C14.76 7 17 9.24 17 12C17 13.38 16.44 14.63 15.535 15.535C14.63 16.44 13.38 17 12 17C9.24 17 7 14.76 7 12C7 10.62 7.56 9.37 8.465 8.465Z"
                                                                        />
                                                                      </svg>
                                                                    </ForwardRef(SvgIcon)>
                                                                  </WithStyles(ForwardRef(SvgIcon))>
                                                                </ForwardRef>
                                                              </div>
                                                            </RadioButtonIcon>
                                                          </WithStyles(RadioButtonIcon)>
                                                        </span>
                                                        <NoSsr>
                                                          <WithStyles(undefined)
                                                            center={true}
                                                          >
                                                            <ForwardRef(TouchRipple)
                                                              center={true}
                                                              classes={
                                                                Object {
                                                                  "child": "MuiTouchRipple-child",
                                                                  "childLeaving": "MuiTouchRipple-childLeaving",
                                                                  "childPulsate": "MuiTouchRipple-childPulsate",
                                                                  "ripple": "MuiTouchRipple-ripple",
                                                                  "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                                  "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                                  "root": "MuiTouchRipple-root",
                                                                }
                                                              }
                                                            >
                                                              <span
                                                                className="MuiTouchRipple-root"
                                                              >
                                                                <TransitionGroup
                                                                  childFactory={[Function]}
                                                                  component={null}
                                                                  exit={true}
                                                                />
                                                              </span>
                                                            </ForwardRef(TouchRipple)>
                                                          </WithStyles(undefined)>
                                                        </NoSsr>
                                                      </span>
                                                    </ForwardRef(ButtonBase)>
                                                  </WithStyles(ForwardRef(ButtonBase))>
                                                </ForwardRef(IconButton)>
                                              </WithStyles(ForwardRef(IconButton))>
                                            </ForwardRef(SwitchBase)>
                                          </WithStyles(ForwardRef(SwitchBase))>
                                        </ForwardRef(Radio)>
                                      </WithStyles(ForwardRef(Radio))>
                                      <WithStyles(ForwardRef(Typography))
                                        className="MuiFormControlLabel-label"
                                        component="span"
                                      >
                                        <ForwardRef(Typography)
                                          className="MuiFormControlLabel-label"
                                          classes={
                                            Object {
                                              "alignCenter": "MuiTypography-alignCenter",
                                              "alignJustify": "MuiTypography-alignJustify",
                                              "alignLeft": "MuiTypography-alignLeft",
                                              "alignRight": "MuiTypography-alignRight",
                                              "body1": "MuiTypography-body1",
                                              "body2": "MuiTypography-body2",
                                              "button": "MuiTypography-button",
                                              "caption": "MuiTypography-caption",
                                              "colorError": "MuiTypography-colorError",
                                              "colorInherit": "MuiTypography-colorInherit",
                                              "colorPrimary": "MuiTypography-colorPrimary",
                                              "colorSecondary": "MuiTypography-colorSecondary",
                                              "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                              "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                              "displayBlock": "MuiTypography-displayBlock",
                                              "displayInline": "MuiTypography-displayInline",
                                              "gutterBottom": "MuiTypography-gutterBottom",
                                              "h1": "MuiTypography-h1",
                                              "h2": "MuiTypography-h2",
                                              "h3": "MuiTypography-h3",
                                              "h4": "MuiTypography-h4",
                                              "h5": "MuiTypography-h5",
                                              "h6": "MuiTypography-h6",
                                              "noWrap": "MuiTypography-noWrap",
                                              "overline": "MuiTypography-overline",
                                              "paragraph": "MuiTypography-paragraph",
                                              "root": "MuiTypography-root",
                                              "srOnly": "MuiTypography-srOnly",
                                              "subtitle1": "MuiTypography-subtitle1",
                                              "subtitle2": "MuiTypography-subtitle2",
                                            }
                                          }
                                          component="span"
                                        >
                                          <span
                                            className="MuiTypography-root MuiFormControlLabel-label MuiTypography-body1"
                                          >
                                            Low Priority
                                          </span>
                                        </ForwardRef(Typography)>
                                      </WithStyles(ForwardRef(Typography))>
                                    </label>
                                  </ForwardRef(FormControlLabel)>
                                </WithStyles(ForwardRef(FormControlLabel))>
                              </div>
                            </ForwardRef(FormGroup)>
                          </WithStyles(ForwardRef(FormGroup))>
                        </ForwardRef(RadioGroup)>
                      </div>
                    </ForwardRef(FormControl)>
                  </WithStyles(ForwardRef(FormControl))>
                  <div
                    className="buttons-row"
                  >
                    <WithStyles(ForwardRef(Button))
                      color="primary"
                      onClick={[Function]}
                      variant="contained"
                    >
                      <ForwardRef(Button)
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit",
                            "contained": "MuiButton-contained",
                            "containedPrimary": "MuiButton-containedPrimary",
                            "containedSecondary": "MuiButton-containedSecondary",
                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                            "disableElevation": "MuiButton-disableElevation",
                            "disabled": "Mui-disabled",
                            "endIcon": "MuiButton-endIcon",
                            "focusVisible": "Mui-focusVisible",
                            "fullWidth": "MuiButton-fullWidth",
                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                            "label": "MuiButton-label",
                            "outlined": "MuiButton-outlined",
                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                            "root": "MuiButton-root",
                            "sizeLarge": "MuiButton-sizeLarge",
                            "sizeSmall": "MuiButton-sizeSmall",
                            "startIcon": "MuiButton-startIcon",
                            "text": "MuiButton-text",
                            "textPrimary": "MuiButton-textPrimary",
                            "textSecondary": "MuiButton-textSecondary",
                            "textSizeLarge": "MuiButton-textSizeLarge",
                            "textSizeSmall": "MuiButton-textSizeSmall",
                          }
                        }
                        color="primary"
                        onClick={[Function]}
                        variant="contained"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                          component="button"
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                          type="button"
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="button"
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiButton-label"
                              >
                                Add Reminder
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Button)>
                    </WithStyles(ForwardRef(Button))>
                    <WithStyles(ForwardRef(Button))
                      onClick={[Function]}
                      variant="outlined"
                    >
                      <ForwardRef(Button)
                        classes={
                          Object {
                            "colorInherit": "MuiButton-colorInherit",
                            "contained": "MuiButton-contained",
                            "containedPrimary": "MuiButton-containedPrimary",
                            "containedSecondary": "MuiButton-containedSecondary",
                            "containedSizeLarge": "MuiButton-containedSizeLarge",
                            "containedSizeSmall": "MuiButton-containedSizeSmall",
                            "disableElevation": "MuiButton-disableElevation",
                            "disabled": "Mui-disabled",
                            "endIcon": "MuiButton-endIcon",
                            "focusVisible": "Mui-focusVisible",
                            "fullWidth": "MuiButton-fullWidth",
                            "iconSizeLarge": "MuiButton-iconSizeLarge",
                            "iconSizeMedium": "MuiButton-iconSizeMedium",
                            "iconSizeSmall": "MuiButton-iconSizeSmall",
                            "label": "MuiButton-label",
                            "outlined": "MuiButton-outlined",
                            "outlinedPrimary": "MuiButton-outlinedPrimary",
                            "outlinedSecondary": "MuiButton-outlinedSecondary",
                            "outlinedSizeLarge": "MuiButton-outlinedSizeLarge",
                            "outlinedSizeSmall": "MuiButton-outlinedSizeSmall",
                            "root": "MuiButton-root",
                            "sizeLarge": "MuiButton-sizeLarge",
                            "sizeSmall": "MuiButton-sizeSmall",
                            "startIcon": "MuiButton-startIcon",
                            "text": "MuiButton-text",
                            "textPrimary": "MuiButton-textPrimary",
                            "textSecondary": "MuiButton-textSecondary",
                            "textSizeLarge": "MuiButton-textSizeLarge",
                            "textSizeSmall": "MuiButton-textSizeSmall",
                          }
                        }
                        onClick={[Function]}
                        variant="outlined"
                      >
                        <WithStyles(ForwardRef(ButtonBase))
                          className="MuiButton-root MuiButton-outlined"
                          component="button"
                          disabled={false}
                          focusRipple={true}
                          focusVisibleClassName="Mui-focusVisible"
                          onClick={[Function]}
                          type="button"
                        >
                          <ForwardRef(ButtonBase)
                            className="MuiButton-root MuiButton-outlined"
                            classes={
                              Object {
                                "disabled": "Mui-disabled",
                                "focusVisible": "Mui-focusVisible",
                                "root": "MuiButtonBase-root",
                              }
                            }
                            component="button"
                            disabled={false}
                            focusRipple={true}
                            focusVisibleClassName="Mui-focusVisible"
                            onClick={[Function]}
                            type="button"
                          >
                            <button
                              className="MuiButtonBase-root MuiButton-root MuiButton-outlined"
                              disabled={false}
                              onBlur={[Function]}
                              onClick={[Function]}
                              onDragLeave={[Function]}
                              onFocus={[Function]}
                              onKeyDown={[Function]}
                              onKeyUp={[Function]}
                              onMouseDown={[Function]}
                              onMouseLeave={[Function]}
                              onMouseUp={[Function]}
                              onTouchEnd={[Function]}
                              onTouchMove={[Function]}
                              onTouchStart={[Function]}
                              tabIndex={0}
                              type="button"
                            >
                              <span
                                className="MuiButton-label"
                              >
                                Cancel
                              </span>
                              <NoSsr>
                                <WithStyles(undefined)
                                  center={false}
                                >
                                  <ForwardRef(TouchRipple)
                                    center={false}
                                    classes={
                                      Object {
                                        "child": "MuiTouchRipple-child",
                                        "childLeaving": "MuiTouchRipple-childLeaving",
                                        "childPulsate": "MuiTouchRipple-childPulsate",
                                        "ripple": "MuiTouchRipple-ripple",
                                        "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                        "rippleVisible": "MuiTouchRipple-rippleVisible",
                                        "root": "MuiTouchRipple-root",
                                      }
                                    }
                                  >
                                    <span
                                      className="MuiTouchRipple-root"
                                    >
                                      <TransitionGroup
                                        childFactory={[Function]}
                                        component={null}
                                        exit={true}
                                      />
                                    </span>
                                  </ForwardRef(TouchRipple)>
                                </WithStyles(undefined)>
                              </NoSsr>
                            </button>
                          </ForwardRef(ButtonBase)>
                        </WithStyles(ForwardRef(ButtonBase))>
                      </ForwardRef(Button)>
                    </WithStyles(ForwardRef(Button))>
                  </div>
                </form>
              </div>
              <div
                data-test="sentinelEnd"
                tabIndex={0}
              />
            </TrapFocus>
          </div>
        </Portal>
      </ForwardRef(Portal)>
    </ForwardRef(Modal)>
  </CalendarForm>
</Provider>
`;
